"use client";

import Image from "next/image";
import { faUserAstronaut, faTableColumns } from "@fortawesome/pro-solid-svg-icons";
import { faWhatsapp } from "@fortawesome/free-brands-svg-icons";

// Componentes
import { HeroSectionProps } from "@/components/layout";
import { AgentCard } from "@/components/decolaos/AgentCard";
import { FeatureCard } from "@/components/decolaos/FeatureCard";
import { Footer } from "@/components/decolaos/Footer";
import { TextSection } from "@/components/decolaos/TextSection";
import { StepSection } from "@/components/decolaos/StepSection";
import { BenefitSection } from "@/components/decolaos/BenefitSection";

// Configura√ß√£o do HeroSection para esta p√°gina
export const heroProps: HeroSectionProps = {
  title: "Decola OS,",
  subtitle: "For√ßa de Trabalho com IA",
  description: "Agentes treinadas com conte√∫dos e preparada para servir ao time de gest√£o, cria√ß√£o e alunos",
  size: "large",
  animation: true
};

// Dados dos agentes
const agents = [
  { name: "Finicius", imagePath: "/agentes/Finicius.png" },
  { name: "Logilson", imagePath: "/agentes/Logilson.png" },
  { name: "Marketina", imagePath: "/agentes/Marketina.png" },
  { name: "Suportana", imagePath: "/agentes/Suportana.png" },
];

const secondRowAgents = [
  { name: "Advanusa", imagePath: "/agentes/Advanusa.png" },
  { name: "Ateneudes", imagePath: "/agentes/Ateneudes.png" },
  { name: "Precifinelson", imagePath: "/agentes/Precifinelson.png" },
  { name: "Arthutor", imagePath: "/agentes/Arthutor.png" },
];

// Dados dos cards de recursos
const featureCards = [
  {
    title: "Avatar Digital",
    description: "Representa√ß√£o visual do consultor, aulas e tutoriais personalizados, presen√ßa no Portal e WhatsApp",
    icon: faUserAstronaut
  },
  {
    title: "Integra√ß√£o Whatsapp",
    description: "Assistente Inteligente, atendimento 24/7, notifica√ß√µes e alertas, comandos Simples.",
    icon: faWhatsapp
  },
  {
    title: "Dashboard Web",
    description: "Dashboard Personalizado, hist√≥rico de Intera√ß√µes, materiais de apoio.",
    icon: faTableColumns
  }
];

// Dados das se√ß√µes de texto
const introSection = {
  title: "Agentes de IA para Gest√£o Inteligente de Restaurantes",
  paragraphs: [
    "O iFood OS ser√° um ecossistema de agentes de IA especializados, atuando como consultores virtuais para donos de restaurantes cadastrados no iFood.",
    "Inspirado no modelo de acompanhamento do Sebrae, os agentes oferecer√£o uma jornada de capacita√ß√£o, implementa√ß√£o e crescimento sustent√°vel.",
    "A solu√ß√£o ser√° baseada na plataforma Toolzz AI, permitindo a cria√ß√£o e treinamento de m√∫ltiplos agentes de IA, cada um especializado em uma √°rea cr√≠tica da gest√£o de restaurantes, incluindo precifica√ß√£o, compras, preparo, marketing, atendimento e mais.",
    "A intera√ß√£o ocorrer√° por meio de WhatsApp, portal web e um avatar digital, que representar√° o consultor virtual, criando uma experi√™ncia mais pr√≥xima e humanizada para os usu√°rios."
  ]
};

const journeySection = {
  title: "Jornada de Capacita√ß√£o e Evolu√ß√£o",
  introduction: "O iFood OS n√£o ser√° apenas um suporte pontual, mas um processo estruturado de capacita√ß√£o, conduzindo os restaurantes por uma evolu√ß√£o cont√≠nua.",
  steps: [
    {
      title: "Mapeamento Inicial",
      description: [
        "Diagn√≥stico do restaurante com levantamento de desafios e oportunidades.",
        "Sugest√£o de um plano de a√ß√£o baseado nos agentes de IA."
      ]
    },
    {
      title: "Implementa√ß√£o Guiada",
      description: [
        "Recomenda√ß√µes pr√°ticas e a√ß√µes semanais para melhorias no neg√≥cio.",
        "Acompanhamento do progresso e ajustes conforme necessidade."
      ]
    },
    {
      title: "Crescimento e Otimiza√ß√£o",
      description: [
        "Estrat√©gias avan√ßadas para escalar o neg√≥cio.",
        "An√°lises preditivas para decis√µes mais inteligentes."
      ]
    }
  ]
};

const strategicSection = {
  title: "Justificativa Estrat√©gica para o iFood",
  introduction: "O iFood OS ser√° um diferencial competitivo, oferecendo um suporte in√©dito para seus parceiros e fortalecendo o ecossistema de restaurantes.",
  benefits: [
    {
      title: "Melhoria na Qualidade dos Restaurantes",
      description: "Neg√≥cios mais estruturados aumentam a reputa√ß√£o da plataforma."
    },
    {
      title: "Redu√ß√£o da Taxa de Churn",
      description: "Restaurantes mais lucrativos permanecem ativos no iFood por mais tempo."
    },
    {
      title: "Aumento do Ticket M√©dio",
      description: "Restaurantes capacitados vendem mais e geram maior receita para o iFood."
    },
    {
      title: "Uso Estrat√©gico de IA",
      description: "Implementa√ß√£o inovadora que refor√ßa a posi√ß√£o do iFood como l√≠der em tecnologia."
    }
  ]
};

const conclusionSection = {
  title: "Conclus√£o",
  paragraphs: [
    "O iFood OS transformar√° a maneira como os restaurantes interagem com a plataforma, oferecendo um suporte completo e estrat√©gico com intelig√™ncia artificial. Atrav√©s de m√∫ltiplos canais, um avatar digital e um conjunto de agentes especializados, o sistema permitir√° que cada restaurante cres√ßa de forma estruturada e eficiente.",
    "Com essa abordagem, o iFood n√£o apenas conecta restaurantes a clientes, mas se torna um parceiro essencial no sucesso dos neg√≥cios! üöÄ"
  ]
};

export default function DecolaOS() {
  return (
    <div className="flex flex-col items-center min-h-screen bg-white">
      {/* Conte√∫do principal */}
      <div className="w-full">
        {/* Nota: O HeroSection agora √© renderizado automaticamente pelo AppLayout */}
        
        {/* Conte√∫do principal - apenas imagens */}
        <main className="w-full max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8">
          {/* Grid de imagens - primeira linha */}
          <div className="grid grid-cols-1 sm:grid-cols-2 md:grid-cols-4 gap-6 mb-8 justify-center">
            {agents.map((agent) => (
              <AgentCard key={agent.name} name={agent.name} imagePath={agent.imagePath} />
            ))}
          </div>

          {/* Edu - Imagem central */}
          <div className="flex justify-center mb-8">
            <div className="rounded-2xl overflow-hidden relative" style={{ width: "1144px", height: "260px", maxWidth: "100%" }}>
              <Image 
                src="/agentes/Edu.png" 
                alt="Edu" 
                fill
                style={{ objectFit: 'cover' }}
              />
            </div>
          </div>

          {/* Grid de imagens - segunda linha */}
          <div className="grid grid-cols-1 sm:grid-cols-2 md:grid-cols-4 gap-6 justify-center">
            {secondRowAgents.map((agent) => (
              <AgentCard key={agent.name} name={agent.name} imagePath={agent.imagePath} />
            ))}
          </div>
        </main>

        {/* Cards adicionais */}
        <section className="w-full max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-16">
          <div className="grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 gap-8 justify-center">
            {featureCards.map((card, index) => (
              <FeatureCard 
                key={index}
                title={card.title}
                description={card.description}
                icon={card.icon}
              />
            ))}
          </div>
        </section>

        {/* Se√ß√µes de texto */}
        <TextSection 
          title={introSection.title} 
          paragraphs={introSection.paragraphs} 
        />

        <StepSection 
          title={journeySection.title}
          introduction={journeySection.introduction}
          steps={journeySection.steps}
        />

        <BenefitSection 
          title={strategicSection.title}
          introduction={strategicSection.introduction}
          benefits={strategicSection.benefits}
        />

        <TextSection 
          title={conclusionSection.title} 
          paragraphs={conclusionSection.paragraphs} 
        />

        {/* Rodap√© simples */}
        <Footer />
      </div>
    </div>
  );
} 